<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="TTest_StringSplitter" Id="{3557c2bc-f175-0f33-0927-d50dd619e2da}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TTest_StringSplitter EXTENDS FB_TestSuite
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Test_Splits_On_Tab();
Test_Handles_Empty_String();
Test_ReturnsRemainder();]]></ST>
    </Implementation>
    <Method Name="Test_Handles_Empty_String" Id="{795a2b91-857d-0d81-3d05-8353689a056c}">
      <Declaration><![CDATA[METHOD Test_Handles_Empty_String
VAR
    StringSplitter : TStringSplitter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(TestName := 'Test_Handles_Empty_String');

StringSplitter.Init(
    Str    := '',
    Delim1 := '$T',
    Delim2 := '');

AssertEquals_STRING(
    Expected := '',
    Actual   := StringSplitter.GetNext(),
    Message  := 'Sub-string is wrong');

AssertEquals_BOOL(
    Expected := FALSE,
    Actual   := StringSplitter.HasMore(),
    Message  := 'HasMore result not correct');


TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_ReturnsRemainder" Id="{3f92bbff-e599-0f95-294e-05f723e2fae9}">
      <Declaration><![CDATA[METHOD Test_ReturnsRemainder
VAR
    StringSplitter : TStringSplitter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(TestName := 'Test_ReturnsRemainder');

StringSplitter.Init(
    Str    := 'Bob$TCharles$TDavid',
    Delim1 := '$T',
    Delim2 := '');

AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := StringSplitter.HasMore(),
    Message  := 'HasMore result not correct');
    
AssertEquals_STRING(
    Expected := 'Bob',
    Actual   := StringSplitter.GetNext(),
    Message  := 'Sub-string is wrong');
    
AssertEquals_STRING(
    Expected := 'Charles$TDavid',
    Actual   := StringSplitter.GetRemainder(),
    Message  := 'Sub-string is wrong');

AssertEquals_STRING(
    Expected := '',
    Actual   := StringSplitter.GetRemainder(),
    Message  := 'Sub-string is wrong');

AssertEquals_BOOL(
    Expected := FALSE,
    Actual   := StringSplitter.HasMore(),
    Message  := 'HasMore result not correct');
    

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_Splits_On_Tab" Id="{5bd25ef1-29f5-059c-1bba-346b9b52b0b1}">
      <Declaration><![CDATA[METHOD Test_Splits_On_Tab
VAR
    StringSplitter : TStringSplitter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(TestName := 'Test_Splits_On_Tab');

StringSplitter.Init(
    Str    := 'Bob$TCharles$TDavid',
    Delim1 := '$T',
    Delim2 := '');

AssertEquals_STRING(
    Expected := 'Bob',
    Actual   := StringSplitter.GetNext(),
    Message  := 'Sub-string is wrong');

AssertEquals_STRING(
    Expected := 'Charles',
    Actual   := StringSplitter.GetNext(),
    Message  := 'Sub-string is wrong');

AssertEquals_STRING(
    Expected := 'David',
    Actual   := StringSplitter.GetNext(),
    Message  := 'Sub-string is wrong');


TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>