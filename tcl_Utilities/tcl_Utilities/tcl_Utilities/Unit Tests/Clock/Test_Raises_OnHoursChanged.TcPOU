<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="Test_Raises_OnHoursChanged" Id="{e535cbdc-dab6-0b06-08b5-ae85ab52fd8c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_Raises_OnHoursChanged EXTENDS TUnitTestBase
IMPLEMENTS 
    IEventHandler_OnHourChanged
VAR
    NowFromEvent : TIMESTRUCT;
    
    OnHoursChanged_Raised    : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Execute" Id="{7138b20d-681b-0e17-0c54-b120fc243fda}">
      <Declaration><![CDATA[METHOD  Execute
VAR_INST
    ClockEventSource : TClockEventSource;
    Now              : TIMESTRUCT := (wDay := 23, wMonth := 12, wYear := 1945, wHour := 22, wMinute := 20, wSecond := 18);
    OneHourLater     : TIMESTRUCT := (wDay := 23, wMonth := 12, wYear := 1945, wHour := 23, wMinute := 20, wSecond := 18);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[OnHoursChanged_Raised := FALSE;

ClockEventSource.Event_HoursChanged.ClearEventHandlers().AddEventHandler(THIS^);

ClockEventSource.Init(Now := Now);
ClockEventSource(Now := OneHourLater);

AssertEquals_BOOL(
    Expected := TRUE,
    Actual   := OnHoursChanged_Raised,
    VariableName  := 'OnHoursChanged_Raised');

AssertEquals_STRUCT(
    Expected := OneHourLater,
    Actual   := NowFromEvent,
    VariableName  := 'NowFromEvent');

Test_Finished();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnHourChanged" Id="{a7186963-839c-0647-0738-9ed23cb7af23}">
      <Declaration><![CDATA[METHOD OnHourChanged
VAR_INPUT
	Now	: Tc2_Utilities.TIMESTRUCT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[NowFromEvent := Now;
OnHoursChanged_Raised := TRUE;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>