<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="TCsvString" Id="{f27bbfed-2056-0375-19f2-4107d5e092f0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TCsvString
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    _csvString : T_MaxString;
    _FieldCount : INT;
    FieldOffsets : ARRAY[0..Param.MaxCsvFields] OF INT;
    FieldLengths : ARRAY[0..Param.MaxCsvFields] OF INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="FieldCount" Id="{5321deef-5a3d-0374-0825-484f985c5680}">
      <Declaration><![CDATA[PROPERTY FieldCount : INT]]></Declaration>
      <Get Name="Get" Id="{0aa07169-1f81-0d37-133e-3ce92d4344aa}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FieldCount := _FieldCount;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetField" Id="{375d6db9-2418-0ef7-2137-c8a4cc2be318}">
      <Declaration><![CDATA[METHOD GetField : T_MaxString
VAR_INPUT
    Index : INT;
END_VAR
VAR
    Result : T_MaxString;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Index < _FieldCount THEN
    F_ClearMem(Result);
    MEMCPY(
        destAddr := ADR(Result),
        srcAddr  := ADR(_csvString) + INT_TO_UDINT(FieldOffsets[Index]),
        n        := INT_TO_UDINT(FieldLengths[Index]));
    GetField := Result;    
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetCsvString" Id="{b6870c7f-d836-0713-23cd-610588a34969}">
      <Declaration><![CDATA[METHOD SetCsvString
VAR_INPUT
    csvString : T_MaxString;
END_VAR
VAR
    pChar : POINTER TO BYTE;
    COMMA : BYTE := F_ToASC(',');
    Fieldlength : INT;
    CharIndex : INT;
    csvStringLength : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_csvString := csvString;
csvStringLength := LEN(_csvString);
F_ClearMem(FieldOffsets);
F_ClearMem(FieldLengths);
_FieldCount := 0;
CharIndex := 0;

IF csvStringLength > 0 THEN
    pChar := ADR(_csvString);
    
    WHILE pChar[CharIndex] <> 0 AND CharIndex < csvStringLength DO
        IF pChar[CharIndex] = COMMA THEN
            // Set length of current field...
            FieldLengths[_FieldCount] := CharIndex - FieldOffsets[_FieldCount];
            
            // Move to next field...
            IF _FieldCount < Param.MaxCsvFields - 1 THEN
                _FieldCount := _FieldCount + 1;
                // Set field offset for next field
                FieldOffsets[_FieldCount] := CharIndex + 1;
            ELSE
                EXIT;
			END_IF
		END_IF
        // Next character...
        CharIndex := CharIndex + 1;
	END_WHILE
    // no comma at end of last field...
    FieldLengths[_FieldCount] := CharIndex - FieldOffsets[_FieldCount];
    _FieldCount := _FieldCount + 1;
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>